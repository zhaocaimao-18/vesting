{
  "address": "0x5CA0D468697a859B6Cb282d038A51D06CeF85a66",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "vesting",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "VestingCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allUsers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allVestings",
      "outputs": [
        {
          "internalType": "contract Vesting",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_totalAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "name": "createVesting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllUsers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllVestingAddresses",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllVestingsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getVestingAddressesOf",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getVestingsOfLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "vestingsOf",
      "outputs": [
        {
          "internalType": "contract Vesting",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xa4758a93586b739d8993980bb786f42b2fb1ba5c2a5c863666f9b1b038da41c0",
  "receipt": {
    "to": null,
    "from": "0x3Aa0240B359b191Eeb7DC3840Db7e9836fE36673",
    "contractAddress": "0x5CA0D468697a859B6Cb282d038A51D06CeF85a66",
    "transactionIndex": 66,
    "gasUsed": "1659237",
    "logsBloom": "0x
    "blockHash": "0x507b46f4affa02cf5f13f81d1ae5b58f50a3a51c754844a4025a8377dbcd0305",
    "transactionHash": "0xa4758a93586b739d8993980bb786f42b2fb1ba5c2a5c863666f9b1b038da41c0",
    "logs": [
      {
        "transactionIndex": 66,
        "blockNumber": 8317215,
        "transactionHash": "0xa4758a93586b739d8993980bb786f42b2fb1ba5c2a5c863666f9b1b038da41c0",
        "address": "0x5CA0D468697a859B6Cb282d038A51D06CeF85a66",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000003aa0240b359b191eeb7dc3840db7e9836fe36673"
        ],
        "data": "0x",
        "logIndex": 247,
        "blockHash": "0x507b46f4affa02cf5f13f81d1ae5b58f50a3a51c754844a4025a8377dbcd0305"
      }
    ],
    "blockNumber": 8317215,
    "cumulativeGasUsed": "12963282",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x66c4Ebc1612D5d9a2D7F3a62Da435488b79b0885"
  ],
  "numDeployments": 2,
  "solcInputHash": "11497311eac497223fd3342292824e8b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vesting\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"VestingCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allUsers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allVestings\",\"outputs\":[{\"internalType\":\"contract Vesting\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"createVesting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllUsers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllVestingAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllVestingsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getVestingAddressesOf\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getVestingsOfLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"vestingsOf\",\"outputs\":[{\"internalType\":\"contract Vesting\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/VestingFactory.sol\":\"VestingFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/Vesting.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.28;\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\n// Uncomment this line to use console.log\\n// import \\\"hardhat/console.sol\\\";\\n\\ncontract Vesting {\\n    address public beneficiary; // \\u53d7\\u76ca\\u4eba\\u5730\\u5740\\n    IERC20  public token; // ERC20\\n    uint256 public totalAmount; // \\u603b\\u989d\\u5ea6\\n    uint256 public start; //\\u5f00\\u59cb\\u65f6\\u95f4\\n    uint256 public duration; //\\u91ca\\u653e\\u6301\\u7eed\\u65f6\\u95f4\\n    uint256 public claimed; // \\u5df2\\u9886\\u53d6\\n\\n    event Claimed(address _beneficiary, uint256 amount);\\n    constructor(address _beneficiary, uint256 _totalAmount, uint256 _duration, address _tokenAddress) {\\n        beneficiary = _beneficiary;\\n        token = IERC20(_tokenAddress);       \\n        totalAmount = _totalAmount;\\n        start = block.timestamp;\\n        duration = _duration;\\n        claimed = 0;\\n    }\\n\\n\\n    function _vestedAmount() internal view  returns (uint256) {\\n        if (block.timestamp < start) {\\n            return 0;\\n        } else if (block.timestamp >= start + duration) {\\n            return totalAmount;\\n        } else {\\n            return (block.timestamp - start)  * totalAmount / duration;\\n        }\\n    }\\n\\n    function claim() public returns (bool) {\\n        require(beneficiary == msg.sender, \\\"no permission\\\");\\n        uint256 unreleased = _vestedAmount() - claimed;\\n        require(token.balanceOf(address(this)) >= unreleased, \\\"insufficient balance in contract\\\");\\n\\n        require(unreleased > 0, \\\"nothing to claim\\\");\\n        claimed += unreleased;\\n        token.transfer(beneficiary, unreleased);\\n        emit Claimed(beneficiary, unreleased);\\n        return true;\\n    }\\n\\n    function getClaimableAmount() public view returns (uint256) {\\n        return _vestedAmount() - claimed;\\n    }\\n}\\n\",\"keccak256\":\"0x42ba9e7254c92452f0be6bbeda03940db4d49b5380c3c36367855c3ca0e44798\",\"license\":\"UNLICENSED\"},\"contracts/VestingFactory.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.28;\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./Vesting.sol\\\";\\n\\n// | \\u529f\\u80fd\\u7f16\\u53f7 | \\u540d\\u79f0                         | \\u5fc5\\u987b\\u5b9e\\u73b0 | \\u8bf4\\u660e                  |\\n// | ---- | -------------------------- | ---- | ------------------- |\\n// | F1   | constructor(address token) | \\u2705 \\u662f  | \\u521d\\u59cb\\u5316\\u5de5\\u5382\\u7ed1\\u5b9a token \\u5730\\u5740    |\\n// | F2   | createVesting(...)         | \\u2705 \\u662f  | \\u521b\\u5efa Vesting \\u5e76\\u4fdd\\u5b58\\u6620\\u5c04    |\\n// | F3   | allVestings\\\\[]             | \\u2705 \\u662f  | \\u8bb0\\u5f55\\u6240\\u6709\\u90e8\\u7f72\\u8fc7\\u7684\\u5408\\u7ea6          |\\n// | F4   | vestingsOf\\\\[address]       | \\u2705 \\u662f  | \\u8bb0\\u5f55\\u67d0\\u7528\\u6237\\u540d\\u4e0b\\u7684 Vesting \\u5b9e\\u4f8b |\\n// | F5   | getAllVestings()           | \\u2705 \\u662f  | \\u67e5\\u8be2\\u6240\\u6709 Vesting \\u5b9e\\u4f8b     |\\n// | F6   | getVestingsOf(user)        | \\u2705 \\u662f  | \\u67e5\\u8be2\\u67d0\\u7528\\u6237\\u540d\\u4e0b\\u6240\\u6709\\u5b9e\\u4f8b         |\\n// | F7   | VestingCreated event       | \\u2705 \\u662f  | \\u4e8b\\u4ef6\\u76d1\\u542c\\u652f\\u6301\\u524d\\u7aef UI \\u8054\\u52a8      |\\n\\n\\ncontract VestingFactory is Ownable {\\n    IERC20  public token; // ERC20\\n    Vesting[] public allVestings;\\n\\n\\n    mapping(address => Vesting[]) public vestingsOf;\\n    \\n        // \\u6240\\u6709\\u51fa\\u73b0\\u8fc7\\u7684\\u7528\\u6237\\uff08\\u53ef\\u9009\\uff0c\\u4fbf\\u4e8e\\u67e5\\u8be2\\u548c\\u805a\\u5408\\uff09\\n    address[] public allUsers;\\n\\n    event VestingCreated(\\n    address indexed creator,\\n    address indexed beneficiary,\\n    address vesting,\\n    uint256 amount,\\n    uint256 duration\\n);\\n\\n    constructor(address _tokenAddress) Ownable(msg.sender) {\\n        token = IERC20(_tokenAddress);\\n    }\\n    \\n    function createVesting(address _beneficiary, uint256 _totalAmount, uint256 _duration) public onlyOwner {\\n        Vesting vesting = new Vesting(_beneficiary, _totalAmount, _duration, address(token));\\n\\n        vestingsOf[_beneficiary].push(vesting);\\n        \\n        allVestings.push(vesting);\\n\\n               // F6: \\u53ef\\u9009\\u8bb0\\u5f55\\u7528\\u6237\\u5730\\u5740\\n        if (vestingsOf[_beneficiary].length == 1) {\\n            allUsers.push(_beneficiary);\\n        }\\n\\n        emit VestingCreated(msg.sender, _beneficiary, address(vesting), _totalAmount, _duration);\\n    }\\n    \\n    function getVestingAddressesOf(address user) public view returns (address[] memory) {\\n        Vesting[] storage list = vestingsOf[user];\\n        address[] memory res = new address[](list.length);\\n        for (uint i = 0; i < list.length; i++) {\\n            res[i] = address(list[i]);\\n        }\\n        return res;\\n    }\\n\\n    function getAllVestingAddresses() public view returns (address[] memory) {\\n        address[] memory res = new address[](allVestings.length);\\n        for (uint i = 0; i < allVestings.length; i++) {\\n            res[i] = address(allVestings[i]);\\n        }\\n        return res;\\n    }\\n\\n    function getAllVestingsLength() public view returns (uint256) {\\n        return allVestings.length;\\n    }\\n\\n    function getVestingsOfLength(address user) public view returns (uint256) {\\n        return vestingsOf[user].length;\\n    }\\n\\n    function getAllUsers() public view returns (address[] memory) {\\n        return allUsers;\\n    }\\n\\n}\\n\",\"keccak256\":\"0x80c13412ecf5675966b4b2480fa419d7892f9191ccb2f93cb0615e8bd6aa9925\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051611ea5380380611ea583398181016040528101906100329190610223565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a55760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009c919061025f565b60405180910390fd5b6100b4816100fc60201b60201c565b5080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061027a565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101f0826101c5565b9050919050565b610200816101e5565b811461020b57600080fd5b50565b60008151905061021d816101f7565b92915050565b600060208284031215610239576102386101c0565b5b60006102478482850161020e565b91505092915050565b610259816101e5565b82525050565b60006020820190506102746000830184610250565b92915050565b611c1c806102896000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063bf5a13831161008c578063e2842d7911610066578063e2842d7914610228578063e975490814610246578063f2fde38b14610262578063fc0c546a1461027e576100cf565b8063bf5a138314610198578063dfb9366d146101c8578063e01ba446146101f8576100cf565b80632e2965b4146100d45780634988f08e146100f2578063715018a6146101105780638da5cb5b1461011a5780638f3e3e5b14610138578063a2bdedf414610168575b600080fd5b6100dc61029c565b6040516100e99190610b86565b60405180910390f35b6100fa6102a9565b6040516101079190610c91565b60405180910390f35b6101186103ae565b005b6101226103c2565b60405161012f9190610cc2565b60405180910390f35b610152600480360381019061014d9190610d0e565b6103eb565b60405161015f9190610c91565b60405180910390f35b610182600480360381019061017d9190610d67565b610533565b60405161018f9190610cc2565b60405180910390f35b6101b260048036038101906101ad9190610d67565b610572565b6040516101bf9190610df3565b60405180910390f35b6101e260048036038101906101dd9190610e0e565b6105b1565b6040516101ef9190610df3565b60405180910390f35b610212600480360381019061020d9190610d0e565b6105ff565b60405161021f9190610b86565b60405180910390f35b61023061064b565b60405161023d9190610c91565b60405180910390f35b610260600480360381019061025b9190610e4e565b6106d9565b005b61027c60048036038101906102779190610d0e565b610961565b005b6102866109e7565b6040516102939190610ec2565b60405180910390f35b6000600280549050905090565b6060600060028054905067ffffffffffffffff8111156102cc576102cb610edd565b5b6040519080825280602002602001820160405280156102fa5781602001602082028036833780820191505090505b50905060005b6002805490508110156103a6576002818154811061032157610320610f0c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682828151811061035f5761035e610f0c565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508080600101915050610300565b508091505090565b6103b6610a0d565b6103c06000610a94565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000818054905067ffffffffffffffff8111156104505761044f610edd565b5b60405190808252806020026020018201604052801561047e5781602001602082028036833780820191505090505b50905060005b8280549050811015610528578281815481106104a3576104a2610f0c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168282815181106104e1576104e0610f0c565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508080600101915050610484565b508092505050919050565b6004818154811061054357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002818154811061058257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360205281600052604060002081815481106105cd57600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b606060048054806020026020016040519081016040528092919081815260200182805480156106cf57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610685575b5050505050905090565b6106e1610a0d565b6000838383600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405161071590610b60565b6107229493929190610f3b565b604051809103906000f08015801561073e573d6000803e3d6000fd5b509050600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050036108f2576004849080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f33e2dd27a82a368d0f01ffd3d8ba9f6705d0176daa88e096b72f00f03faeef9883868660405161095393929190610f80565b60405180910390a350505050565b610969610a0d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109db5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109d29190610cc2565b60405180910390fd5b6109e481610a94565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610a15610b58565b73ffffffffffffffffffffffffffffffffffffffff16610a336103c2565b73ffffffffffffffffffffffffffffffffffffffff1614610a9257610a56610b58565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a899190610cc2565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b610c2f80610fb883390190565b6000819050919050565b610b8081610b6d565b82525050565b6000602082019050610b9b6000830184610b77565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bf882610bcd565b9050919050565b610c0881610bed565b82525050565b6000610c1a8383610bff565b60208301905092915050565b6000602082019050919050565b6000610c3e82610ba1565b610c488185610bac565b9350610c5383610bbd565b8060005b83811015610c84578151610c6b8882610c0e565b9750610c7683610c26565b925050600181019050610c57565b5085935050505092915050565b60006020820190508181036000830152610cab8184610c33565b905092915050565b610cbc81610bed565b82525050565b6000602082019050610cd76000830184610cb3565b92915050565b600080fd5b610ceb81610bed565b8114610cf657600080fd5b50565b600081359050610d0881610ce2565b92915050565b600060208284031215610d2457610d23610cdd565b5b6000610d3284828501610cf9565b91505092915050565b610d4481610b6d565b8114610d4f57600080fd5b50565b600081359050610d6181610d3b565b92915050565b600060208284031215610d7d57610d7c610cdd565b5b6000610d8b84828501610d52565b91505092915050565b6000819050919050565b6000610db9610db4610daf84610bcd565b610d94565b610bcd565b9050919050565b6000610dcb82610d9e565b9050919050565b6000610ddd82610dc0565b9050919050565b610ded81610dd2565b82525050565b6000602082019050610e086000830184610de4565b92915050565b60008060408385031215610e2557610e24610cdd565b5b6000610e3385828601610cf9565b9250506020610e4485828601610d52565b9150509250929050565b600080600060608486031215610e6757610e66610cdd565b5b6000610e7586828701610cf9565b9350506020610e8686828701610d52565b9250506040610e9786828701610d52565b9150509250925092565b6000610eac82610dc0565b9050919050565b610ebc81610ea1565b82525050565b6000602082019050610ed76000830184610eb3565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000608082019050610f506000830187610cb3565b610f5d6020830186610b77565b610f6a6040830185610b77565b610f776060830184610cb3565b95945050505050565b6000606082019050610f956000830186610cb3565b610fa26020830185610b77565b610faf6040830184610b77565b94935050505056fe608060405234801561001057600080fd5b50604051610c2f380380610c2f83398181016040528101906100329190610172565b836000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260028190555042600381905550816004819055506000600581905550505050506101d9565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610109826100de565b9050919050565b610119816100fe565b811461012457600080fd5b50565b60008151905061013681610110565b92915050565b6000819050919050565b61014f8161013c565b811461015a57600080fd5b50565b60008151905061016c81610146565b92915050565b6000806000806080858703121561018c5761018b6100d9565b5b600061019a87828801610127565b94505060206101ab8782880161015d565b93505060406101bc8782880161015d565b92505060606101cd87828801610127565b91505092959194509250565b610a47806101e86000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063be9a65551161005b578063be9a655514610105578063c354bd6e14610123578063e834a83414610141578063fc0c546a1461015f57610088565b80630fb5a6b41461008d5780631a39d8ef146100ab57806338af3eed146100c95780634e71d92d146100e7575b600080fd5b61009561017d565b6040516100a2919061057c565b60405180910390f35b6100b3610183565b6040516100c0919061057c565b60405180910390f35b6100d1610189565b6040516100de91906105d8565b60405180910390f35b6100ef6101ad565b6040516100fc919061060e565b60405180910390f35b61010d6104b2565b60405161011a919061057c565b60405180910390f35b61012b6104b8565b604051610138919061057c565b60405180910390f35b6101496104d4565b604051610156919061057c565b60405180910390f35b6101676104da565b6040516101749190610688565b60405180910390f35b60045481565b60025481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461023d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023490610700565b60405180910390fd5b600060055461024a610500565b610254919061074f565b905080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102b291906105d8565b602060405180830381865afa1580156102cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f391906107b4565b1015610334576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032b9061082d565b60405180910390fd5b60008111610377576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036e90610899565b60405180910390fd5b806005600082825461038991906108b9565b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b815260040161040d9291906108ed565b6020604051808303816000875af115801561042c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104509190610942565b507fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826040516104a29291906108ed565b60405180910390a1600191505090565b60035481565b60006005546104c5610500565b6104cf919061074f565b905090565b60055481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006003544210156105155760009050610560565b60045460035461052591906108b9565b4210610535576002549050610560565b60045460025460035442610549919061074f565b610553919061096f565b61055d91906109e0565b90505b90565b6000819050919050565b61057681610563565b82525050565b6000602082019050610591600083018461056d565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105c282610597565b9050919050565b6105d2816105b7565b82525050565b60006020820190506105ed60008301846105c9565b92915050565b60008115159050919050565b610608816105f3565b82525050565b600060208201905061062360008301846105ff565b92915050565b6000819050919050565b600061064e61064961064484610597565b610629565b610597565b9050919050565b600061066082610633565b9050919050565b600061067282610655565b9050919050565b61068281610667565b82525050565b600060208201905061069d6000830184610679565b92915050565b600082825260208201905092915050565b7f6e6f207065726d697373696f6e00000000000000000000000000000000000000600082015250565b60006106ea600d836106a3565b91506106f5826106b4565b602082019050919050565b60006020820190508181036000830152610719816106dd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061075a82610563565b915061076583610563565b925082820390508181111561077d5761077c610720565b5b92915050565b600080fd5b61079181610563565b811461079c57600080fd5b50565b6000815190506107ae81610788565b92915050565b6000602082840312156107ca576107c9610783565b5b60006107d88482850161079f565b91505092915050565b7f696e73756666696369656e742062616c616e636520696e20636f6e7472616374600082015250565b60006108176020836106a3565b9150610822826107e1565b602082019050919050565b600060208201905081810360008301526108468161080a565b9050919050565b7f6e6f7468696e6720746f20636c61696d00000000000000000000000000000000600082015250565b60006108836010836106a3565b915061088e8261084d565b602082019050919050565b600060208201905081810360008301526108b281610876565b9050919050565b60006108c482610563565b91506108cf83610563565b92508282019050808211156108e7576108e6610720565b5b92915050565b600060408201905061090260008301856105c9565b61090f602083018461056d565b9392505050565b61091f816105f3565b811461092a57600080fd5b50565b60008151905061093c81610916565b92915050565b60006020828403121561095857610957610783565b5b60006109668482850161092d565b91505092915050565b600061097a82610563565b915061098583610563565b925082820261099381610563565b915082820484148315176109aa576109a9610720565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006109eb82610563565b91506109f683610563565b925082610a0657610a056109b1565b5b82820490509291505056fea264697066735822122057d3e72c3d82e3e91e064d3d450ec82b38d35728faa2bc3934adf55a6dcbcebd64736f6c634300081c0033a26469706673582212204c02ec347f3c4c3b45b5262a62add359e90c32b6e6e985fcc719d562bd68a12c64736f6c634300081c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063bf5a13831161008c578063e2842d7911610066578063e2842d7914610228578063e975490814610246578063f2fde38b14610262578063fc0c546a1461027e576100cf565b8063bf5a138314610198578063dfb9366d146101c8578063e01ba446146101f8576100cf565b80632e2965b4146100d45780634988f08e146100f2578063715018a6146101105780638da5cb5b1461011a5780638f3e3e5b14610138578063a2bdedf414610168575b600080fd5b6100dc61029c565b6040516100e99190610b86565b60405180910390f35b6100fa6102a9565b6040516101079190610c91565b60405180910390f35b6101186103ae565b005b6101226103c2565b60405161012f9190610cc2565b60405180910390f35b610152600480360381019061014d9190610d0e565b6103eb565b60405161015f9190610c91565b60405180910390f35b610182600480360381019061017d9190610d67565b610533565b60405161018f9190610cc2565b60405180910390f35b6101b260048036038101906101ad9190610d67565b610572565b6040516101bf9190610df3565b60405180910390f35b6101e260048036038101906101dd9190610e0e565b6105b1565b6040516101ef9190610df3565b60405180910390f35b610212600480360381019061020d9190610d0e565b6105ff565b60405161021f9190610b86565b60405180910390f35b61023061064b565b60405161023d9190610c91565b60405180910390f35b610260600480360381019061025b9190610e4e565b6106d9565b005b61027c60048036038101906102779190610d0e565b610961565b005b6102866109e7565b6040516102939190610ec2565b60405180910390f35b6000600280549050905090565b6060600060028054905067ffffffffffffffff8111156102cc576102cb610edd565b5b6040519080825280602002602001820160405280156102fa5781602001602082028036833780820191505090505b50905060005b6002805490508110156103a6576002818154811061032157610320610f0c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682828151811061035f5761035e610f0c565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508080600101915050610300565b508091505090565b6103b6610a0d565b6103c06000610a94565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000818054905067ffffffffffffffff8111156104505761044f610edd565b5b60405190808252806020026020018201604052801561047e5781602001602082028036833780820191505090505b50905060005b8280549050811015610528578281815481106104a3576104a2610f0c565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168282815181106104e1576104e0610f0c565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508080600101915050610484565b508092505050919050565b6004818154811061054357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002818154811061058257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360205281600052604060002081815481106105cd57600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b606060048054806020026020016040519081016040528092919081815260200182805480156106cf57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610685575b5050505050905090565b6106e1610a0d565b6000838383600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660405161071590610b60565b6107229493929190610f3b565b604051809103906000f08015801561073e573d6000803e3d6000fd5b509050600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050036108f2576004849080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f33e2dd27a82a368d0f01ffd3d8ba9f6705d0176daa88e096b72f00f03faeef9883868660405161095393929190610f80565b60405180910390a350505050565b610969610a0d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109db5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109d29190610cc2565b60405180910390fd5b6109e481610a94565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610a15610b58565b73ffffffffffffffffffffffffffffffffffffffff16610a336103c2565b73ffffffffffffffffffffffffffffffffffffffff1614610a9257610a56610b58565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a899190610cc2565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b610c2f80610fb883390190565b6000819050919050565b610b8081610b6d565b82525050565b6000602082019050610b9b6000830184610b77565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bf882610bcd565b9050919050565b610c0881610bed565b82525050565b6000610c1a8383610bff565b60208301905092915050565b6000602082019050919050565b6000610c3e82610ba1565b610c488185610bac565b9350610c5383610bbd565b8060005b83811015610c84578151610c6b8882610c0e565b9750610c7683610c26565b925050600181019050610c57565b5085935050505092915050565b60006020820190508181036000830152610cab8184610c33565b905092915050565b610cbc81610bed565b82525050565b6000602082019050610cd76000830184610cb3565b92915050565b600080fd5b610ceb81610bed565b8114610cf657600080fd5b50565b600081359050610d0881610ce2565b92915050565b600060208284031215610d2457610d23610cdd565b5b6000610d3284828501610cf9565b91505092915050565b610d4481610b6d565b8114610d4f57600080fd5b50565b600081359050610d6181610d3b565b92915050565b600060208284031215610d7d57610d7c610cdd565b5b6000610d8b84828501610d52565b91505092915050565b6000819050919050565b6000610db9610db4610daf84610bcd565b610d94565b610bcd565b9050919050565b6000610dcb82610d9e565b9050919050565b6000610ddd82610dc0565b9050919050565b610ded81610dd2565b82525050565b6000602082019050610e086000830184610de4565b92915050565b60008060408385031215610e2557610e24610cdd565b5b6000610e3385828601610cf9565b9250506020610e4485828601610d52565b9150509250929050565b600080600060608486031215610e6757610e66610cdd565b5b6000610e7586828701610cf9565b9350506020610e8686828701610d52565b9250506040610e9786828701610d52565b9150509250925092565b6000610eac82610dc0565b9050919050565b610ebc81610ea1565b82525050565b6000602082019050610ed76000830184610eb3565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000608082019050610f506000830187610cb3565b610f5d6020830186610b77565b610f6a6040830185610b77565b610f776060830184610cb3565b95945050505050565b6000606082019050610f956000830186610cb3565b610fa26020830185610b77565b610faf6040830184610b77565b94935050505056fe608060405234801561001057600080fd5b50604051610c2f380380610c2f83398181016040528101906100329190610172565b836000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260028190555042600381905550816004819055506000600581905550505050506101d9565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610109826100de565b9050919050565b610119816100fe565b811461012457600080fd5b50565b60008151905061013681610110565b92915050565b6000819050919050565b61014f8161013c565b811461015a57600080fd5b50565b60008151905061016c81610146565b92915050565b6000806000806080858703121561018c5761018b6100d9565b5b600061019a87828801610127565b94505060206101ab8782880161015d565b93505060406101bc8782880161015d565b92505060606101cd87828801610127565b91505092959194509250565b610a47806101e86000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063be9a65551161005b578063be9a655514610105578063c354bd6e14610123578063e834a83414610141578063fc0c546a1461015f57610088565b80630fb5a6b41461008d5780631a39d8ef146100ab57806338af3eed146100c95780634e71d92d146100e7575b600080fd5b61009561017d565b6040516100a2919061057c565b60405180910390f35b6100b3610183565b6040516100c0919061057c565b60405180910390f35b6100d1610189565b6040516100de91906105d8565b60405180910390f35b6100ef6101ad565b6040516100fc919061060e565b60405180910390f35b61010d6104b2565b60405161011a919061057c565b60405180910390f35b61012b6104b8565b604051610138919061057c565b60405180910390f35b6101496104d4565b604051610156919061057c565b60405180910390f35b6101676104da565b6040516101749190610688565b60405180910390f35b60045481565b60025481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461023d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023490610700565b60405180910390fd5b600060055461024a610500565b610254919061074f565b905080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102b291906105d8565b602060405180830381865afa1580156102cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f391906107b4565b1015610334576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032b9061082d565b60405180910390fd5b60008111610377576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036e90610899565b60405180910390fd5b806005600082825461038991906108b9565b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b815260040161040d9291906108ed565b6020604051808303816000875af115801561042c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104509190610942565b507fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826040516104a29291906108ed565b60405180910390a1600191505090565b60035481565b60006005546104c5610500565b6104cf919061074f565b905090565b60055481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006003544210156105155760009050610560565b60045460035461052591906108b9565b4210610535576002549050610560565b60045460025460035442610549919061074f565b610553919061096f565b61055d91906109e0565b90505b90565b6000819050919050565b61057681610563565b82525050565b6000602082019050610591600083018461056d565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105c282610597565b9050919050565b6105d2816105b7565b82525050565b60006020820190506105ed60008301846105c9565b92915050565b60008115159050919050565b610608816105f3565b82525050565b600060208201905061062360008301846105ff565b92915050565b6000819050919050565b600061064e61064961064484610597565b610629565b610597565b9050919050565b600061066082610633565b9050919050565b600061067282610655565b9050919050565b61068281610667565b82525050565b600060208201905061069d6000830184610679565b92915050565b600082825260208201905092915050565b7f6e6f207065726d697373696f6e00000000000000000000000000000000000000600082015250565b60006106ea600d836106a3565b91506106f5826106b4565b602082019050919050565b60006020820190508181036000830152610719816106dd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061075a82610563565b915061076583610563565b925082820390508181111561077d5761077c610720565b5b92915050565b600080fd5b61079181610563565b811461079c57600080fd5b50565b6000815190506107ae81610788565b92915050565b6000602082840312156107ca576107c9610783565b5b60006107d88482850161079f565b91505092915050565b7f696e73756666696369656e742062616c616e636520696e20636f6e7472616374600082015250565b60006108176020836106a3565b9150610822826107e1565b602082019050919050565b600060208201905081810360008301526108468161080a565b9050919050565b7f6e6f7468696e6720746f20636c61696d00000000000000000000000000000000600082015250565b60006108836010836106a3565b915061088e8261084d565b602082019050919050565b600060208201905081810360008301526108b281610876565b9050919050565b60006108c482610563565b91506108cf83610563565b92508282019050808211156108e7576108e6610720565b5b92915050565b600060408201905061090260008301856105c9565b61090f602083018461056d565b9392505050565b61091f816105f3565b811461092a57600080fd5b50565b60008151905061093c81610916565b92915050565b60006020828403121561095857610957610783565b5b60006109668482850161092d565b91505092915050565b600061097a82610563565b915061098583610563565b925082820261099381610563565b915082820484148315176109aa576109a9610720565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006109eb82610563565b91506109f683610563565b925082610a0657610a056109b1565b5b82820490509291505056fea264697066735822122057d3e72c3d82e3e91e064d3d450ec82b38d35728faa2bc3934adf55a6dcbcebd64736f6c634300081c0033a26469706673582212204c02ec347f3c4c3b45b5262a62add359e90c32b6e6e985fcc719d562bd68a12c64736f6c634300081c0033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/VestingFactory.sol:VestingFactory",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 729,
        "contract": "contracts/VestingFactory.sol:VestingFactory",
        "label": "token",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)225"
      },
      {
        "astId": 733,
        "contract": "contracts/VestingFactory.sol:VestingFactory",
        "label": "allVestings",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_contract(Vesting)719)dyn_storage"
      },
      {
        "astId": 739,
        "contract": "contracts/VestingFactory.sol:VestingFactory",
        "label": "vestingsOf",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_array(t_contract(Vesting)719)dyn_storage)"
      },
      {
        "astId": 742,
        "contract": "contracts/VestingFactory.sol:VestingFactory",
        "label": "allUsers",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_contract(Vesting)719)dyn_storage": {
        "base": "t_contract(Vesting)719",
        "encoding": "dynamic_array",
        "label": "contract Vesting[]",
        "numberOfBytes": "32"
      },
      "t_contract(IERC20)225": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(Vesting)719": {
        "encoding": "inplace",
        "label": "contract Vesting",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_array(t_contract(Vesting)719)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => contract Vesting[])",
        "numberOfBytes": "32",
        "value": "t_array(t_contract(Vesting)719)dyn_storage"
      }
    }
  }
}